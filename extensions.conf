[general]

;----------------------------------------------------------------------------------------
;CONTEXTO DE CLIENTES
;----------------------------------------------------------------------------------------

[globals]

;----------------------------------------------------------------------------------------
;CONTEXTO CLIENTE
;----------------------------------------------------------------------------------------
[context-client];Nome do contexto do cliente

;Regra cliente para envio de chamadas padrÃ£o
exten => _TECH_CLIENT.,1,Noop(MODELO TECH CLIENT)
exten => _TECH_CLIENT.,n,Noop(NUMERO DISCADO ${EXTEN})
exten => _TECH_CLIENT.,n,Set(DISCADO=${EXTEN:6});Regra para tira 6 digitos (tech-prefix cliente)
exten => _TECH_CLIENT.,n,Macro(SAIDA_MACRO,SIP/${EXTEN}@IP_PLATAFORMA_SIP)
exten => _TECH_CLIENT.,n,Hangup()


;Fim CONTEXTO CLIENTE
;----------------------------------------------------------------------------------------


;----------------------------------------------------------------------------------------
; Cadastrar os cliente acima da MODELO Macro
;----------------------------------------------------------------------------------------
[macro-SAIDA_MACRO]

exten => s,1,Noop(ANI: ${CALLERID(num)})

;exten => s,n,Noop(Controla CPS)
;exten => s,n,Set(GROUP()=${EPOCH})
;exten => s,n,Set(TOTAL=${GROUP_COUNT(${EPOCH})})
;exten => s,n,Noop(Time ${EPOCH})
;exten => s,n,GotoIf($[${TOTAL} >= 20]?segura:continua);acima de 20 CPS segura 1 segundo

;exten => s,n(segura),NoOp(Segura 1 segundo)
;exten => s,n,Wait(1)
;exten => s,n,Wait(0,5)

;exten => s,n(continua),Noop(Consulta DB asterisk)
;exten => s,n,MYSQL(Connect connid localhost root  asterisk);deixar 2 espacos depois do root
;exten => s,n,MYSQL(Query resultid ${connid} SELECT IFNULL (SUM(rel),0) from numeros where numero = ${DISCADO})
;exten => s,n,MYSQL(Fetch fetchid ${resultid} rel)
;exten => s,n,MYSQL(Clear ${resultid})
;exten => s,n,MYSQL(Disconnect ${connid})
;exten => s,n,NoOp(REL_DB ${rel} ${DISCADO})
;exten => s,n,GotoIf($[${rel} = 1]?rel_1_db:)
;exten => s,n,GotoIf($[${rel} = 19]?rel_19_db:)

exten => s,n,Dial(${ARG1}/${ARG2},50,gS(5400))
;Se B desligar a chamada, usar 'g' no dial para segurar 2 segundos
exten => s,n,GotoIf($["${ANSWEREDTIME}" = ""]?:b_desligou);duracao diferente de nulo envia b_desligou
exten => s,n,noop(RELEASE ${HANGUPCAUSE},${DISCADO} ${CDR(duration)})
exten => s,n,GotoIf($["${HANGUPCAUSE}" = "0"]?sip_480:)
exten => s,n,GotoIf($["${HANGUPCAUSE}" = "34"]?rel_34:)
exten => s,n,Hangup()

exten => s,n(rel_1_db),Wait(3)
exten => s,n,Hangup(1)

exten => s,n(rel_19_db),Wait(4)
exten => s,n,Hangup(19)

exten => s,n(sip_480),Hangup(19)
exten => s,n(sip_503),Hangup(19)

exten => s,n(rel_34),Gotoif($[${CDR(duration)} > 5]?sip_480:);Rel 34 com resposta menor que 3
exten => s,n,Ringing()
exten => s,n,Wait(30)
exten => s,n,Hangup(19)

;quando B desliga segura 2 segundos
exten => s,n(b_desligou),Noop(DESLIGOU ${DISCADO} ${ANSWEREDTIME})
exten => s,n,Wait(2)
exten => s,n,Hangup()

;Fim MODELO MACRO
;----------------------------------------------------------------------------------------
